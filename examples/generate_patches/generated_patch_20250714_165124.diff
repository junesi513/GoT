f
--- vulnerable/ObjectArrayCodec.java
+++ fixed/ObjectArrayCodec.java
@@ -1,4 +1,6 @@
 // @author wenshao[szujobs@hotmail.com]
+import com.alibaba.fastjson.parser.deserializer.ParseProcess;
+import com.alibaba.fastjson.JSONException;
 public class ObjectArrayCodec implements ObjectSerializer, ObjectDeserializer {
     @SuppressWarnings({ "unchecked", "rawtypes" })
     public <T> T deserialze(DefaultJSONParser parser, Type type, Object fieldName) {
@@ -20,15 +22,25 @@ public class ObjectArrayCodec implements ObjectSerializer, ObjectDeserializer {
                 componentClass = TypeUtils.getClass(typeVar.getBounds()[0]);
             }
         } else {
             componentClass = TypeUtils.getClass(componentType);
         }
     
+       // apply ParseProcess to check for deserialization of unsafe types
+        if (parser.getResolveStatus() != DefaultJSONParser.TypeNameRedirect) {
+            ParseProcess checker = parser.getConfig().getDeserializer(componentClass);
+            if (checker == null || !checker.apply(type)) {
+                throw new JSONException("Identified a potentially unsafe deserialization type: " + componentClass.getName());
+            }
+        }
+
         JSONArray array = new JSONArray();
         
         parser.parseArray(componentClass, array, fieldName);

         return (T) toObjectArray(parser, componentClass, array);
     }
 } 
```